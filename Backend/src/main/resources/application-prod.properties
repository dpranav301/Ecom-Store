#This MySql command to use when docker container try to acess local machine db
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/ecom 

spring.datasource.url=${DB_URL:jdbc:mysql://mysql:3307/ecom}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true

#path Config
user.profile.image.path=images/users/
category.image.path=images/categories/
product.image.path=images/products/
#file Config
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Security
security.secret=dgfwsefklsfjiaejfqowijfequfweflkjnzfdjfktgiuhiuefhlaiejfhayegfhabssuygfhasfhabdaodwigadskdayghagsdagbhdbahsdbjagsdkaHDHAYDAGDVBHADKUdshabsdhabvgfvnjabsdcka
token.validity=10000000
refresh.token.validity=172800